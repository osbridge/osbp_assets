%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 11.0.0%%For: (BH-G5-3 G5) (Berita Harian)%%Title: (mozilla.eps)%%CreationDate: 5/11/09 3:03 PM%%BoundingBox: 76 339 521 502%%HiResBoundingBox: 76.1289 339.4277 520.8711 501.3516%%DocumentProcessColors: Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%RGBProcessColor: 0 0 0.1098 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 298.5 420.3896 298.5 420.3896%AI3_TileBox: 13.5776 12.0049 581.8975 829.6846%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595.2756 841.8898%AI5_RulerUnits: 4%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -335 872.8896 1 1268 915 26 0 0 6 42 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 -1%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI7_Thumbnail: 128 48 8%%BeginData: 9374 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD4DFF94938DC3FD06FFCACA9B9493FD07FFCAC49A8D9BFD63FFCB%698D688D689AFD04FF938D688D688DCAFD04FFC4698D688D689AFD63FF9A%8D688D8D8D68CAFFFFCB8D8C8D688D8DFD05FFA18D8D8D688D9AFD63FF94%688D688D688C9BFFFFFF698D688D688DA8FD04FFC4688D688D689AFD63FF%948D698D8D8D68CAFFFFFF948C8D698D8DFD05FFA28D8D8D698D94FD63FF%CA688D688D6893CAFFFFFF698D688D688DCAFD04FFCA688D688D689AFD64%FFC38D8D6894CAFD04FF9A688D8D8D69FD05FFCA8D688D8D8D94FD66FFA1%CACAFD05FF948C688D688DA8FD04FFCA688D688D6894FD6EFF9A68FD048D%FD05FFCA8D698D8D8D94FD1AFFCACA9ACAFFFFA2C394949AC4FD06FF9B9B%949A9ACAFD0CFFA8A1949A949A9ACAFD09FFCAA1CAA2CAA1CAA2CAA1CAA2%CAA1CAA1CAFD04FFA8CAA1A1949BFD04FF948D688D688DA8FD04FFCA688D%688D6894FD0AFFA8A19A9A949494C3A8FD05FFC394938C8C94FF948D688D%688D6894CAFFFFC38D8D688D688D6894CAFD08FFCA948D688D688D688D68%94CAFD07FF948D688D8D8D688D8D8D688D8D8D688D94FFFFFFCA93688D68%8C93FD04FF9A688D688D8DCBFD04FFA28D8D8D688D94FD08FFC3938D688D%688D688D688D94FD04FF698C688D688D698D688D688D688D688DA29A688D%688D688D688D6893CAFD06FFC4688C688D688D688D688D688D9BFD06FF94%688D688D688D688D688D688D688D6894FFFFFFCA688D688D6894FD04FF93%8D688D688DA8FD04FFCA688D688D689AFD06FF9A93688C688D688D688D68%8D688C8DFFFFFFC3688D8D8D698D8D8D698D8D8D698D8D8D688D8D8D688D%8D8D698D68C3FD05FFCA8C8D698D8D8D688D8D8D698D8D8DA1FD05FF948D%688D8C8D688D8C8D698D8D8D698D94FFFFFFCA8D688D8D8D94FD04FFBC8C%8D698D8DFD05FFA28D8D8D698D94FD05FF948D8D8D698D8D8D688D8D8D69%8D8D8D9BFFFFA18D688D688D688D688D688D688D688D688D688D688D688D%688D688D94FD05FF698D688D688D689A9493688D688D688DA2FD04FF9B8D%936994939369948D8D688D688D689AFFFFFFCB698D688D6894FD04FF938D%688D688DCAFD04FFCA688D688D689AFD05FFC4688D688D688D688D688D68%8D688D6893FFFFCA8D8D688D8D8D69C3CAFF9A8D8D8D688D8C8D94CACAC3%688D8D8D689AFD04FF9B8D68FD048DCBFFFFCA9A688D688D6894FD0DFF9A%688D688D8D8DA8FFFFFFCA8D8D8D688D94FD04FF9A688D8D8D69FD05FFCA%8D688D8D8D94FD06FF9A688D68939BCACAFFA18D8D8D688D8DFFFFA18D68%8D688D93FD05FF688D688D688DA1FD04FF8D688D688D69FFFFFFA88D688D%688D68C3FD04FFA88D688D688D68CAFD0BFFA1688D688D688C9AFD04FFCA%688D688D689AFD04FF948C688D688DA8FD04FFCA688D688D6894FD06FFA8%8D68C3CBFD05FF938D688D688DA8FFCA8D8D698D68C3FD05FF948D8D698D%9AFD05FF938D8D8D6894FFFFFFCA8C8D698D8D93FD06FF948D698D8D8D9A%FD0AFFCB688D8D8D698D94FD05FFCA938D8D698D94FD04FF9A68FD048DFD%05FFCA8D698D8D8D94FD07FFA1FD08FFC3688D698D8DFFFFA18D688D688D%9BFD05FF698D688D689BFD05FF93688D688D69FFFFFF9A8D688D688D93FD%06FF9B688D688D6894FD0AFF8D8D688D688D68CBFD05FFCA688D688D689A%FD04FF948D688D688DA8FD04FFCA688D688D6894FD10FF948D688D688DCA%FFCA688D8D8D68C3FD05FF94688D8D8D9AFD05FF938D688D8C94FFFFFF9A%688D8D8D68BDFD06FFA18D8D8D688D93FD09FF9A8D8D8D688D68C3FD06FF%CA8D688D8D8D94FD04FF9A688D688D8DCBFD04FFA28D8D8D688D94FD09FF%A2C39A9493948D93688D8D8D69FFFFA18D688D688C9AFD05FF8D8D688D68%9AFD04FFCA94688D688D8DFFFFFF8D8D688D688C9AFD06FFC3688D688D68%8DCAFD07FFA18C688D688D689AFD07FFCA688D688D6894FD04FF938D688D%688DA8FD04FFCA688D688D689AFD07FFC3698D688D688D688D688D688D68%8DA8FFCA688D8D8D68C3FD05FF94688D8D8D9AFD05FF938D698D8C94FFFF%FF94688D8D8D68BDFD06FFA18D8D8D698D8DFD07FFCA93688D8D8D6893CB%FD07FFCA8D688D8D8D94FD04FFBC8C8D698D8DFD05FFA28D8D8D698D94FD%06FFBD688D698D8D8D698D8D8D69FD048DFFFFA28D688D688C9AFD05FF93%8D688D689AFD05FF94688D688D93FFFFFF8D8D688D688C9AFD06FFC3688D%688D688DCAFD06FF94688D688D688CA1FD08FFCB698D688D6894FD04FF93%8D688D688DCAFD04FFCA688D688D689AFD05FFA1688D688D688D688C688D%688D688D688DA8FFCA8D8D688D68C3FD05FF948C8D688D9AFD05FF938D8D%8D6894FFFFFF948C8D688D689BFD06FFA18D68FD048DFD06FFC3688D8D8D%698D9AFD09FFCA8D8D8D688D94FD04FF9A688D8D8D69FD05FFCA8D688D8D%8D94FD05FF8D8D688D8D8D68BDA1CAA89A688D688D8DFFFFA18D688D688C%9BFD05FF698D688D689BFD05FF93688D688D69FFFFFF948D688D688D94FD%06FFA1688D688D6894FD05FFCA688D688D688D69FD0AFFCA688D688D689A%FD04FF948C688D688DA8FD04FFCA688D688D6894FD04FFA18D688D688D68%C3FD04FF9A8D688D688DCAFFCA8D8D698D68C3FD05FF948C8D698D9AFD05%FF938D8D8D6894FFFFFFC3688D698D8D94FD06FF9A8D698D8D8D9AFD05FF%8D8D698D8D8D68CAFD0AFFCA938D8D698D94FD04FF9A68FD048DFD05FFCA%8D698D8D8D94FD04FFC3688D698D8C94FD05FFBC8C8D698D8DFFFFA18D68%8D688D9BFD05FF698D688D689BFD05FF93688D688D69FFFFFFA88D688D68%8D68CBFD05FF93688D688D68C3FD04FF948D688D688D689BFD0BFFCA688D%688D689AFD04FF948D688D688DA8FD04FFCA688D688D6894FD04FF948D68%8D688D94FD05FF948D688D6893FFFFCA688D8D8D68C3FD05FF94688D8D8D%9AFD05FF938D688D8C94FD04FF938D8D8D688D9BFD04FFC4688D8D8D6893%FD04FFA18D688D8D8D689AFD0CFFCA8D688D8D8D94FD04FF9A688D688D8D%CAFD04FFCA8D8D8D688D94FD04FFBD688D8D8D6893FD05FF94688D8D8D68%CBFFA18D688D688C9AFD05FF8D8D688D689AFD04FFCA94688D688D8DFD04%FFCA688D688D688D9ACAA8C3688D688D688C9BFFFFFFA88D688D688D688D%94C39AA19AA19BA19AA1CAFFFFCA688D688D6894FD04FF948D688D688D9B%FD04FFCA688D688D688DA8FFFFFF9B8C688D688D689ACAFFA89A688D688D%688C9AFFCA688D8D8D68C3FD05FF94688D8D8D9AFD05FF938D698D8C94FD%05FFBD688D698D8D8D69938C8D698D8D8D94FD04FFC3688D698D8D8D698D%688D688D688D688C8DFFFFFFCA8D688D8D8D94FD04FFC3688D698D8D8D93%CAFFFFFF948D8D698D8D9394FFFFCB698D8D8D698D8C938D8D8C8D698D8D%8D688DA1A28D688D688C9AFD05FF938D688D689AFD05FF94688D688D93FD%06FF94688D688D688D688D688D688D8DFD05FF9A8D688D688D688D688D68%8D688D688D68C3FFFFFFCB698D688D6894FD04FFA88D688D688D688C94FF%FFFF9A8C688D688D688CA1FFFF9A688D688D688D688D688D688D688D688D%6894CA688D688D68C3FD05FF94688D688C9AFD05FF8D8D688D6894FD07FF%C38C8D688D8D8D688D688D94FD06FFC3688D688D688D688D688D688D688D%688DCAFFFFFFCA8D688D688D94FD05FF9B8D688D688D8C8DCAFFFFFF938D%8D8D688D689BFFFFFF94688D8D8D688D8D8D688D9A93688D6893CAA89493%949394A1FD05FFFD04946FC3FD05FF9A939A949494FD08FFCA9A93688D68%8D699AA1FD07FFA194939A9494939A9494939A949493949AFD04FFCB9394%94946FA1FD06FFA193688D688D69CAFD04FF948D688D688D9AFFFFFFCA9B%688D688C688D6893A1FFA88D688DA8FD2AFFCACBCAFD2EFFCBA2CACAFD08%FFCAA2CACBFD07FFC4C39BC3A1CAFD04FFCABDC3FDFCFFFDFCFFFD0CFFA8%9B949BA8FD07FFA29B94C3FD08FF9BC39A9BA1FD07FFA8C39B9B9BFD09FF%9B9A9ACAFD07FFC49A9B9AC4FD0AFF9AC3FD07FFCA9AA19AC39AA1FD06FF%9AC3FD08FFA19B9AC4FD07FFCA9AC3FFFFA1C3FFA18D688D68C3FD06FFA1%8D688D6894CAFD06FF8D688D688D9BFD06FFCA688D688C68CAFD06FF8D8C%8D8D68C4FD06FF938C688C689AFD08FFA18C68CAFD06FF948C688D688C93%FD05FFA18C93FD07FF9A8C688D689AFD06FFC48C68CAFF9468A88D68FD04%CAFD05FFA28D69CAFF9A689AFD06FF6893A8CA688DA8FD05FFA18C94FF9B%8C69FD05FF94689AFFA28D68CBFD05FF9468CAA89368CAFD07FF94688C9A%FD07FFA8C3689BA8FD06FFCA6894FD06FFA18C8DFFA89468A1FD05FFCA68%8C6FFF948CC368BDFD09FFC368BDFFFFCA8D8DFD06FF8D93FFFF8D69FD06%FFCA68C3FFFF6893FD05FF8D69FFFFFF948CA1FD05FF948DFFFF938DC4FD%07FF8D948D94FD08FFA18C9BFD07FFA28D94FD06FFBD68C4FFFFA18C93FD%05FFCA8D688DCA9B68948C9BFD09FF948CA1FFFFCB688DA8FD05FF698D9A%946894FD06FFA28C93CA948C93FD04FFCA6893FFFFFF9B689BFD05FF9468%9A948C69FD07FFA18CA19A68CAFD07FFC468A1FD07FFCA689AFD06FF698D%A1FFFFCA6893FD05FFCA6894689A948D9B68C3FD09FF9B68C4FFFFCA8D8D%FD06FF938D8D689AFD07FFCA8D8D688D93FD05FFA28D93FFFFFF9A8C9AFD%05FF948D688D93FD08FF9A68CA9A8C9BFD07FFA18C9BFD07FFCA8D94FD06%FF9468CAFFFFA28D93FD05FFA28DA19A68948D9A689AFD09FF9A689AFFFF%CA6893CBFD05FF68949B8C93FD07FFA18D93CAA1FD07FF688DCAFFFF9A68%A1FD05FF9468C36893CAFD07FF698D688D6894FD07FFC368A1FD07FFCA68%94FD06FF9468A1FFFFC46894FD05FFCA68C3A88C688DCA6893CAFFCAFD06%FFCA6894CAFF9A8C9AFD06FF9393FF948DA1FD06FFCA68BDFD09FFBC68C3%FFCB8D8DCAFD05FF948DFFC3689BFD06FFA18C94CAA19368FD07FFA18C9B%FD07FFCA8D94FD06FFCA689AFFFF948CA1FD05FFA28D9BFF938D8DFFA168%8D698C94FD06FF9B688D698C69FD07FF688DFFCA688DA8FD05FFA18C94FD%09FFA88D688D688C9BFD06FF9468CACB8D68C3FD05FF9468CAFFFF9A689A%FD06FFC3689BFD07FFCA6894FD07FF9A688D698C93FD06FFCA689AFFC368%8CFFFFCA9A9A9BCAFD07FFCA9A9A9BFD08FFC3A1FFFFC49ACAFD06FF9ACA%FD0AFFCAC39A9BA1FD07FFA1C3FFFFA2BDA1FD05FF9BC3FFFFFFCB9ACAFD%06FFCA9BA2FD07FFCAC3A1FD08FFC3949BA1FD07FFCAC3A1FFFFC39BFD58%FFCAFFFFFFCAFD1BFFCBFFFFFFCAFFFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (Symbolism)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (Pathfinder Suite)%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.5686 0.4549 0.3882 0.8902 ([Registration]) 0 Xs([Registration]) PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O0 0.9412 0.6784 0.1569 0.6706 0.0196 0.2039 Xa0 J 0 j 1 w 4 M []0 d0 XR156.6953 441.6133 m156.6953 446.0703 156.3203 448.9844 155.582 450.375 C154.8398 451.7695 153.1367 452.4648 150.4805 452.4648 c148.6055 452.4648 146.4883 451.8906 144.1172 450.7422 C141.7539 449.6055 139.4883 448.043 137.3164 446.0703 C137.3164 391.3418 L118.4063 391.3418 L118.4063 440.748 L118.4063 445.4844 117.9531 448.6289 117.0547 450.1719 C116.1563 451.6953 114.3086 452.4648 111.5156 452.4648 c109.6172 452.4648 107.4922 451.9883 105.1484 451.0508 C102.8008 450.1211 100.5313 448.6445 98.332 446.6758 C98.332 391.3418 L78.9609 391.3418 L78.9609 444.4453 L78.9609 447.2109 78.9102 449.6211 78.8047 451.6563 C78.707 453.6875 78.5625 455.4453 78.3633 456.9297 C78.1602 458.4336 77.8945 459.7422 77.543 460.875 C77.1992 462.0078 76.7266 463.0313 76.1289 463.9258 C94.1289 468.832 L94.8203 467.75 95.3438 466.6758 95.6914 465.6367 C96.0313 464.5938 96.4102 463.082 96.8008 461.0938 C102.0586 466.2539 108.2539 468.832 115.3945 468.832 c121.6367 468.832 126.793 466.7578 130.8555 462.5938 C131.3594 462.0938 131.8477 461.5469 132.3477 460.9492 C132.8438 460.3633 133.3359 459.6641 133.8359 458.8711 C137.3008 462.4375 140.7266 464.9844 144.0938 466.5391 C147.4688 468.0781 151.2344 468.832 155.4023 468.832 c158.3711 468.832 161.1992 468.418 163.8711 467.5742 C166.5508 466.7344 168.7344 465.5625 170.418 464.0742 C172.5938 462.3867 174.0898 460.168 174.8789 457.3828 C175.6719 454.6133 176.0703 450.6445 176.0703 445.4844 C176.0703 391.3418 L156.6953 391.3418 L156.6953 441.6133 Lf*u254.3242 412.9512 m252.7852 408.2793 250.3867 404.0605 247.125 400.2871 C244.25 397.0137 240.8359 394.4434 236.875 392.5527 C232.9219 390.6699 227.9688 389.7246 222.0313 389.7246 c216.8867 389.7246 212.207 390.6699 208 392.5527 C203.7969 394.4434 200.207 397.0918 197.2422 400.5137 C194.2734 403.9434 191.9648 408.084 190.332 412.9512 C188.7031 417.8105 187.8867 423.2168 187.8867 429.1777 c187.8867 435.1309 188.7031 440.5527 190.332 445.4688 C191.9648 450.3867 194.2734 454.6133 197.2422 458.1289 C200.207 461.6445 203.7969 464.3516 208 466.2344 C212.207 468.125 216.8867 469.0664 222.0313 469.0664 c232.8125 469.0664 241.4336 465.2461 247.8672 457.6016 C250.9297 454.0273 253.1602 450.0586 254.543 445.6875 C255.9258 441.332 256.6211 436.0215 256.6211 429.7637 c256.6211 423.2168 255.8555 417.5996 254.3242 412.9512 Cf1 D230.9375 450.082 m228.8594 452.7461 225.9922 454.0781 222.3359 454.0781 c219.9609 454.0781 217.8594 453.3945 216.0352 451.9961 C214.1992 450.6211 212.8984 448.7539 212.1055 446.3828 C211.4141 444.418 210.8984 442.0508 210.5469 439.2949 C210.2031 436.5371 210.0313 433.2793 210.0313 429.5371 c210.0313 420.959 210.8711 414.6074 212.5469 410.459 C213.4375 408.3965 214.8516 406.834 216.7734 405.8027 C218.7031 404.7715 220.6523 404.2402 222.6328 404.2402 c227.0781 404.2402 230.2461 406.2715 232.1211 410.3262 C234 414.3496 234.9414 420.8574 234.9414 429.8262 c234.9414 439.8887 233.6055 446.625 230.9375 450.082 Cf*U0 D265.5352 391.3418 m265.5352 403.6074 L301.4063 453.1602 L268.5313 453.1602 L268.5313 467.2227 L325.0469 467.2227 L325.0469 453.6563 L291.4219 405.4043 L326.4258 405.4043 L321.6602 391.3418 L265.5352 391.3418 Lf*u358.6484 479.7813 m356.2773 477.418 353.3594 476.2148 349.9023 476.2148 c346.543 476.2148 343.6836 477.418 341.3086 479.7813 C338.9414 482.1641 337.75 485.082 337.75 488.5586 c337.75 492.0273 338.957 494.957 341.3828 497.3398 C343.8047 499.7188 346.75 500.9023 350.2031 500.9023 c353.5547 500.9023 356.4023 499.7188 358.7227 497.3398 C361.043 494.957 362.1992 492.0273 362.1992 488.5586 c362.1992 485.082 361.0156 482.1641 358.6484 479.7813 Cf339.8242 466.1719 m359.8945 469.3125 L359.8945 391.3418 L339.8242 391.3418 L339.8242 466.1719 Lf*U395.043 389.498 m390.8438 389.498 387.1836 390.4434 384.0586 392.3184 C380.9336 394.2012 378.7852 396.7246 377.6172 399.8965 C377.2227 400.9043 376.9297 401.834 376.7344 402.7324 C376.543 403.623 376.3633 404.6621 376.2266 405.8574 C376.0781 407.0449 375.9727 408.5293 375.9219 410.3262 C375.875 412.1074 375.8594 414.334 375.8594 417.0137 C375.8594 473.8398 L375.8594 478.9023 375.7773 483.1172 375.6289 486.4844 C375.4844 489.8555 375.2109 493.2734 374.8164 496.7539 C394.9023 501.3516 L395.2891 499.2773 395.5508 496.8008 395.6992 493.9219 C395.8438 491.0391 395.9219 486.9375 395.9219 481.5781 C395.9219 422.209 L395.9219 418.9434 395.9414 416.3184 395.9922 414.334 C396.0391 412.3496 396.0977 410.7637 396.1523 409.584 C396.2031 408.3809 396.3242 407.498 396.5195 406.8965 C396.7148 406.3105 396.9648 405.7559 397.2617 405.2559 C398.0586 403.8652 399.3984 403.1699 401.2813 403.1699 C402.3203 403.1699 L402.5156 403.1699 402.9141 403.2793 403.5117 403.4746 C406.9297 391.5762 L403.2578 390.1777 399.2969 389.498 395.043 389.498 cf435.375 389.498 m431.1758 389.498 427.5039 390.4434 424.3906 392.3184 C421.2539 394.2012 419.1172 396.7246 417.9453 399.8965 C417.5547 400.9043 417.2617 401.834 417.0664 402.7324 C416.8711 403.623 416.6953 404.6621 416.5469 405.8574 C416.4023 407.0449 416.3047 408.5293 416.2539 410.3262 C416.207 412.1074 416.1875 414.334 416.1875 417.0137 C416.1875 473.8398 L416.1875 478.9023 416.1094 483.1172 415.957 486.4844 C415.8047 489.8555 415.5391 493.2734 415.1484 496.7539 C435.2305 501.3516 L435.6211 499.2773 435.8828 496.8008 436.0313 493.9219 C436.1758 491.0391 436.2539 486.9375 436.2539 481.5781 C436.2539 422.209 L436.2539 418.9434 436.2695 416.3184 436.3203 414.334 c436.3711 412.3496 436.4219 410.7637 436.4688 409.584 C436.5195 408.3809 436.6445 407.498 436.8477 406.8965 C437.0469 406.3105 437.2891 405.7559 437.582 405.2559 C438.375 403.8652 439.7227 403.1699 441.6055 403.1699 C442.6523 403.1699 L442.8477 403.1699 443.2422 403.2793 443.832 403.4746 C447.2578 391.5762 L443.5898 390.1777 439.625 389.498 435.375 389.498 cf*u503.9141 391.3887 m501.9609 392.9824 500.4922 394.748 499.5 396.7402 C498.6914 395.9434 497.9258 395.2012 497.1719 394.5059 C496.4258 393.8262 495.6523 393.2246 494.8477 392.7168 C491.0547 389.9512 485.9141 388.5684 479.418 388.5684 c470.7266 388.5684 464.1602 390.5996 459.7148 394.6543 C455.2734 398.6934 453.0508 404.5762 453.0508 412.3027 c453.0508 421.2871 456.1289 427.873 462.2813 432.0762 C468.4258 436.2871 477.7578 438.3887 490.2617 438.3887 C492.5273 438.3887 L493.543 438.3887 494.293 438.3418 494.8008 438.2402 C494.8008 441.3672 L494.8008 445.6406 494.2266 448.5938 493.0898 450.2305 C491.9492 451.8789 489.5469 452.6953 485.8789 452.6953 c482.6953 452.6953 479.2773 451.9375 475.6094 450.4648 C471.9414 448.9609 468.0156 446.8359 463.8555 444.0547 C455.3711 458.3594 L457.3633 459.6445 459.2383 460.7266 461.0234 461.6172 C462.8164 462.5234 465.043 463.5 467.7227 464.5938 C471.4922 466.1875 475.0391 467.3281 478.3594 468.0273 C481.6875 468.7109 485.082 469.0664 488.5508 469.0664 c495.0625 469.0664 500.3789 467.9297 504.4922 465.6602 C508.5938 463.375 511.3867 460.1016 512.8516 455.8555 C513.3398 454.7617 513.6797 453.5977 513.875 452.3672 C514.0703 451.1172 514.168 449.457 514.168 447.3867 C514.168 442.1836 L513.7305 416.6387 L513.7305 414.5449 513.7695 412.7559 513.875 411.2168 C513.9727 409.6934 514.2656 408.2793 514.7695 406.9746 C515.2734 405.7012 515.9844 404.4902 516.9336 403.3574 C517.875 402.209 519.1914 400.998 520.8711 399.7012 C510.2813 387.5215 L507.9883 388.5215 505.8594 389.8027 503.9141 391.3887 Cf1 D478.8828 422.0293 m476.1133 420.5059 474.7305 417.5527 474.7305 413.1621 c474.7305 410.2871 475.5625 407.9824 477.2227 406.209 c478.8828 404.4355 481.0156 403.5605 483.6406 403.5605 c487.6563 403.5605 491.1875 405.2324 494.1992 408.5684 C494.5078 424.3262 L493.5977 424.3262 L486.5625 424.3262 481.6484 423.5605 478.8828 422.0293 Cf*U0 D91.3164 339.4277 m87.0586 339.4277 83.7813 340.8027 81.2578 343.6855 C78.7773 346.4668 77.5352 350.1934 77.5352 354.709 c77.5352 358.5684 78.1992 361.6152 79.6211 364.2793 C82.0156 368.7559 86.4414 371.4121 91.4023 371.4121 c94.457 371.4121 97.5156 370.4355 99.2031 368.9746 C96.4102 364.7715 L94.8555 365.9121 93.2188 366.498 91.4922 366.498 c89.4102 366.498 87.3711 365.4746 86.2617 363.8418 C85.0664 362.0684 84.5391 359.498 84.5391 355.9043 c84.5391 351.7012 84.8906 349.3496 85.8242 347.6699 C87.0586 345.4043 89.0977 344.2168 91.7539 344.2168 c93.5703 344.2168 95.2109 344.748 97.0273 346.209 C99.8594 342.3105 L97.4297 340.3184 94.8125 339.4277 91.3164 339.4277 cf*u138.8398 340.8965 m136.9805 339.873 135.25 339.4746 132.6836 339.4746 c128.0352 339.4746 125.0234 340.7559 122.6719 343.8105 C120.3242 346.8184 119.1289 350.7246 119.1289 355.248 c119.1289 361.8887 121.6523 367.2012 126.082 369.6387 C127.9023 370.6152 130.1602 371.1465 132.4648 371.1465 c140.6563 371.1465 145.7109 365.1699 145.7109 355.5059 c145.7109 348.5605 143.3164 343.3262 138.8398 340.8965 Cf1 D137.7773 362.459 m137.293 364.0059 135.6523 366.3652 132.375 366.3652 c130.2891 366.3652 128.4727 365.2949 127.5898 363.6543 C126.5313 361.6621 126.043 358.9668 126.043 355.248 c126.043 349.9277 126.9258 346.6074 128.7852 345.2715 C129.7578 344.5684 131.0039 344.2168 132.4648 344.2168 c136.7617 344.2168 138.5781 347.498 138.5781 355.334 c138.5781 358.4746 138.3125 360.7402 137.7773 362.459 Cf*U*u0 D181.7656 339.9668 m180.5703 342.0059 180.082 342.8496 178.8828 345.0137 C175.8281 350.5449 174.8984 352.0527 173.793 352.5371 C173.4805 352.6699 173.2148 352.7637 172.8203 352.8105 C172.8203 339.9668 L166.7461 339.9668 L166.7461 370.748 L178.2188 370.748 L183.668 370.748 187.2578 367.1152 187.2578 361.709 c187.2578 357.1074 184.2031 353.2949 180.3945 353.209 C181.0117 352.7168 181.2773 352.4512 181.6758 351.9199 C183.4453 349.7012 189.0742 339.9668 Y181.7656 339.9668 Lf1 D178.5313 365.3418 m177.8203 365.6074 176.5352 365.7793 175.0313 365.7793 C172.8203 365.7793 L172.8203 357.459 L174.8984 357.459 L177.5547 357.459 178.707 357.7246 179.5469 358.4746 C180.3047 359.1934 180.7461 360.2871 180.7461 361.5762 c180.7461 363.4902 179.9922 364.8105 178.5313 365.3418 Cf*U*u0 D226.7695 352.3184 m225.3555 351.6543 224.0195 351.3027 220.6133 351.3027 C217.2031 351.3027 L217.2031 339.9668 L211.0039 339.9668 L211.0039 370.748 L219.1094 370.748 L224.332 370.748 225.9297 370.209 227.6602 369.2402 C230.5352 367.6543 232.0859 364.8105 232.0859 361.2637 c232.0859 357.1855 230.1406 353.9199 226.7695 352.3184 Cf1 D221.1445 365.748 m217.2031 365.748 L217.2031 356.3496 L220.4375 356.3496 L222.9609 356.3496 223.7148 356.6621 224.5586 357.9434 C225.0859 358.7871 225.3086 359.6699 225.3086 361.1309 c225.3086 364.0059 223.7578 365.748 221.1445 365.748 Cf*U*u0 D269.0742 340.8965 m267.2148 339.873 265.4844 339.4746 262.918 339.4746 c258.2695 339.4746 255.2578 340.7559 252.9063 343.8105 C250.5586 346.8184 249.3633 350.7246 249.3633 355.248 c249.3633 361.8887 251.8867 367.2012 256.3164 369.6387 C258.1367 370.6152 260.3945 371.1465 262.6992 371.1465 c270.8906 371.1465 275.9453 365.1699 275.9453 355.5059 c275.9453 348.5605 273.5508 343.3262 269.0742 340.8965 Cf1 D268.0117 362.459 m267.5273 364.0059 265.8867 366.3652 262.6094 366.3652 c260.5234 366.3652 258.707 365.2949 257.8242 363.6543 C256.7617 361.6621 256.2734 358.9668 256.2734 355.248 c256.2734 349.9277 257.1602 346.6074 259.0195 345.2715 C259.9922 344.5684 261.2383 344.2168 262.6992 344.2168 c266.9961 344.2168 268.8125 347.498 268.8125 355.334 c268.8125 358.4746 268.543 360.7402 268.0117 362.459 Cf*U*u0 D311.1094 339.9668 m309.9141 342.0059 309.4258 342.8496 308.2305 345.0137 C305.1719 350.5449 304.2461 352.0527 303.1367 352.5371 C302.8242 352.6699 302.5625 352.7637 302.1641 352.8105 C302.1641 339.9668 L296.0898 339.9668 L296.0898 370.748 L307.5664 370.748 L313.0156 370.748 316.6055 367.1152 316.6055 361.709 c316.6055 357.1074 313.5469 353.2949 309.7383 353.209 C310.3594 352.7168 310.6211 352.4512 311.0234 351.9199 C312.7891 349.7012 318.4219 339.9668 Y311.1094 339.9668 Lf1 D307.8789 365.3418 m307.1641 365.6074 305.8828 365.7793 304.3789 365.7793 C302.1641 365.7793 L302.1641 357.459 L304.2461 357.459 L306.9023 357.459 308.0547 357.7246 308.8945 358.4746 C309.6523 359.1934 310.0898 360.2871 310.0898 361.5762 c310.0898 363.4902 309.3398 364.8105 307.8789 365.3418 Cf*U*u0 D356.7422 339.9668 m354.5664 347.2715 L345.5313 347.2715 L343.3633 339.9668 L336.8906 339.9668 L346.9883 370.834 L353.6797 370.834 L363.3828 339.9668 L356.7422 339.9668 Lf1 D351.375 358.6074 m351.0625 360.0215 350.1328 364.0605 Y349.25 360.4277 348.668 358.123 V348.0977 355.9043 347.7031 354.4355 347.0391 352.4043 C353.0586 352.4043 L352.0391 355.6387 351.375 358.6074 Vf*U0 D401.2461 365.6074 m393.8984 365.6074 L393.8984 339.9668 L387.6133 339.9668 L387.6133 365.6074 L380.082 365.6074 L380.082 370.748 L402.2734 370.748 L401.2461 365.6074 Lf422.8672 339.9668 m422.8672 370.748 L429.332 370.748 L429.332 339.9668 L422.8672 339.9668 Lf*u471.8633 340.8965 m469.9961 339.873 468.2773 339.4746 465.6992 339.4746 c461.0508 339.4746 458.0391 340.7559 455.6914 343.8105 C453.3477 346.8184 452.1523 350.7246 452.1523 355.248 c452.1523 361.8887 454.6758 367.2012 459.1055 369.6387 C460.9219 370.6152 463.1797 371.1465 465.4805 371.1465 c473.6797 371.1465 478.7266 365.1699 478.7266 355.5059 c478.7266 348.5605 476.3359 343.3262 471.8633 340.8965 Cf1 D470.7969 362.459 m470.3164 364.0059 468.6758 366.3652 465.3984 366.3652 c463.3086 366.3652 461.4961 365.2949 460.6133 363.6543 C459.5469 361.6621 459.0586 358.9668 459.0586 355.248 c459.0586 349.9277 459.9453 346.6074 461.8047 345.2715 C462.7813 344.5684 464.0195 344.2168 465.4805 344.2168 c469.7773 344.2168 471.5977 347.498 471.5977 355.334 c471.5977 358.4746 471.3242 360.7402 470.7969 362.459 Cf*U0 D514.2539 339.9668 m508.9805 351.7402 L507.2539 355.5996 505.3984 359.9355 504.8164 361.8418 C505.0469 359.3184 505.082 355.6855 505.1289 353.1152 C505.3047 339.9668 L499.3242 339.9668 L499.3242 370.748 L506.1875 370.748 L512.082 358.4355 L513.6289 355.1543 514.8281 351.9199 515.4531 349.7012 C515.2227 352.0918 515.0078 356.0371 514.9648 358.1621 C514.8281 370.748 L520.7188 370.748 L520.7188 339.9668 L514.2539 339.9668 LfLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF